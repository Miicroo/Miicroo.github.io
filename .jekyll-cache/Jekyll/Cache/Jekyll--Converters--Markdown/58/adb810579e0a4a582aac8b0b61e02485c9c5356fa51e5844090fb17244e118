I" <h1 id="coffee-counter">Coffee counter</h1>

<blockquote>
  <p>PSA: This is not really a custom component in homeassistant, but rather a way of achieving the behaviour of a counter that resets daily.</p>
</blockquote>

<h2 id="background">Background</h2>
<p>I am Swedish, so here <a href="https://static.vinepair.com/wp-content/uploads/2017/04/coffee-infographic-1.png">it is custom to drink a lot of coffee</a>. I also work in an office, meaning that I drink even more coffee. To get a grip on exactly how many cups a day it actually amounts to, I decided to track it with the help of homeassistant.</p>

<h2 id="implementation">Implementation</h2>
<p>To implement the coffee counter we are going to use the new <code class="language-plaintext highlighter-rouge">webhook api</code> together with a simple <code class="language-plaintext highlighter-rouge">input_number</code> and a set of <code class="language-plaintext highlighter-rouge">automations</code>.</p>

<h3 id="setup-input_number">Setup input_number</h3>
<p>We will begin by setting up a simple <a href="https://www.home-assistant.io/components/input_number/">input_number</a> to serve as our counter. To specify a range, we assume that we drink no less than 0 cups of coffee, and no more than 25 (though to be fair it would be quite extreme to be even near 25 cups per day). Add the following to your <code class="language-plaintext highlighter-rouge">configuration.yaml</code>:</p>

<div class="language-yaml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="na">input_number</span><span class="pi">:</span>
  <span class="na">coffee_counter</span><span class="pi">:</span>
    <span class="na">name</span><span class="pi">:</span> <span class="s">Coffee counter</span>
    <span class="na">initial</span><span class="pi">:</span> <span class="m">0</span>
    <span class="na">min</span><span class="pi">:</span> <span class="m">0</span>
    <span class="na">max</span><span class="pi">:</span> <span class="m">25</span>
    <span class="na">step</span><span class="pi">:</span> <span class="m">1</span>
    <span class="na">mode</span><span class="pi">:</span> <span class="s">box</span>
    <span class="na">unit_of_measurement</span><span class="pi">:</span> <span class="s">cups</span>
</code></pre></div></div>

<h3 id="listen-to-incoming-webhook">Listen to incoming webhook</h3>
<p>The <a href="https://www.home-assistant.io/docs/automation/trigger/#webhook-trigger">webhook api</a> was added in homeassistant 0.80 and provides a simple entry point to trigger an automation. You do not need to authenticate your requests, but to make it harder for potential attackers your webhook id should be a long random string. For the sake of clarity we will use a short webhook id, but it should be replaced in a real setup. Add an automation with the following webhook trigger:</p>

<div class="language-yaml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="pi">-</span> <span class="na">alias</span><span class="pi">:</span> <span class="s">Increment coffee counter</span>
  <span class="na">trigger</span><span class="pi">:</span>
    <span class="na">platform</span><span class="pi">:</span> <span class="s">webhook</span>
    <span class="na">webhook_id</span><span class="pi">:</span> <span class="s">coffee</span>
  <span class="na">action</span><span class="pi">:</span>
    <span class="na">service</span><span class="pi">:</span> <span class="s">input_number.set_value</span>
    <span class="na">data_template</span><span class="pi">:</span>
      <span class="na">entity_id</span><span class="pi">:</span> <span class="s">input_number.coffee_counter</span>
      <span class="na">value</span><span class="pi">:</span> <span class="s2">"</span><span class="s">1"</span>
</code></pre></div></div>

<p>Now we have set up our homeassistant to trigger each time we do a POST request with Content-Type: application/json to our endpoint at http://example-ha.duckdns.org:8123/api/webhook/coffee.</p>

<h3 id="reset-at-midnight">Reset at midnight</h3>
<p>It is hard to see how many cups of coffee you drink each day if the value never resets. Thus we will add another automation that sets the counter to 0 every day at midnight. Add a new automation with the following content:</p>

<div class="language-yaml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="pi">-</span> <span class="na">alias</span><span class="pi">:</span> <span class="s">Reset coffee counter</span>
  <span class="na">trigger</span><span class="pi">:</span>
    <span class="na">platform</span><span class="pi">:</span> <span class="s">time</span>
    <span class="na">at</span><span class="pi">:</span> <span class="s1">'</span><span class="s">00:00:00'</span>
  <span class="na">action</span><span class="pi">:</span>
    <span class="na">service</span><span class="pi">:</span> <span class="s">input_number.set_value</span>
    <span class="na">data_template</span><span class="pi">:</span>
      <span class="na">entity_id</span><span class="pi">:</span> <span class="s">input_number.coffee_counter</span>
      <span class="na">value</span><span class="pi">:</span> <span class="m">0</span>
</code></pre></div></div>

<h3 id="add-counter-to-ui">Add counter to UI</h3>
<p>To give a good overview of our typical coffee consumption we can add a <a href="https://www.home-assistant.io/lovelace/history-graph/">history graph card</a> showing the past 5 days (note: you have to use lovelace as default UI in homeassistant). In <code class="language-plaintext highlighter-rouge">ui-lovelace.yaml</code>, add:</p>

<div class="language-yaml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="pi">-</span> <span class="na">type</span><span class="pi">:</span> <span class="s">history-graph</span>
  <span class="na">entities</span><span class="pi">:</span>
    <span class="pi">-</span> <span class="s">input_number.coffee_counter</span>
  <span class="na">title</span><span class="pi">:</span> <span class="s">Coffees</span>
  <span class="na">hours_to_show</span><span class="pi">:</span> <span class="m">120</span>
</code></pre></div></div>

<h3 id="add-support-for-mobile">Add support for mobile</h3>
<p>No system is complete without an easy-to-use interface, and it would be a shame if we had to log on to the homeassistant account every time we wanted to log a new cup of coffee. Instead we will be using a mobile app which lets us instantly increment the counter with a click of an icon. I am currently using <a href="https://play.google.com/store/apps/details?id=ch.rmy.android.http_shortcuts&amp;hl=en_US">HTTP Shortcuts</a> (which is also <a href="https://github.com/Waboodoo/HTTP-Shortcuts">open source</a>) to generate an icon on my home screen.</p>

<p>To configure HTTP shortcuts, first add a new shortcut named Coffee (or anything else if you want). Make sure that it is sending a POST to your webhook api endpoint:</p>

<p><img src="/assets/images/coffee-counter/shortcut1.png" alt="Shortcut POSTing to your endpoint" /></p>

<p>Make sure that the shortcut sends the Content-Type-header with value application/json, and add an empty body that is still valid json (for instance <code class="language-plaintext highlighter-rouge">{}</code>). I have also chosen to be notified of the response via a toast:</p>

<p><img src="/assets/images/coffee-counter/shortcut2.png" alt="Add Content-Type and body" /></p>

<p>Finally, the advanced settings can be left as default:</p>

<p><img src="/assets/images/coffee-counter/shortcut3.png" alt="Add Content-Type and body" /></p>

<p>When the shortcut is saved, longpress on the name in the app and choose <code class="language-plaintext highlighter-rouge">Place on home screen</code> to get a nice clickable icon just a thumb away!</p>

<p><img src="/assets/images/coffee-counter/shortcut4.png" alt="Place icon on home screen!" /></p>

<h2 id="result">Result</h2>
<p>The result is a really easy to use shortcut which produces a chart showing the amount of coffee you drink every day.</p>

<p><img src="/assets/images/coffee-counter/coffee_chart.png" alt="Coffee chart" /></p>
:ET